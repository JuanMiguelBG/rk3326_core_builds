diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 27600a1..163c2ea 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -37,15 +37,13 @@ include(GNUInstallDirs)
 include(GetGitRevisionDescription)
 include(InstallRequiredSystemLibraries)
 include(FindPkgConfig)
-include(ExternalProject)
-include(BuildLibMPEG2)
 
 use_cxx11( )
 
 PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
 PKG_SEARCH_MODULE(SDL2_TTF REQUIRED SDL2_ttf)
 PKG_SEARCH_MODULE(SDL2_IMAGE REQUIRED SDL2_image)
-build_libmpeg2( )
+PKG_SEARCH_MODULE(MPEG2 REQUIRED libmpeg2)
 
 message(STATUS "Target: ${CMAKE_SYSTEM_NAME} ${CMAKE_TARGET_ARCHITECTURES}")
 
@@ -73,6 +71,7 @@ message(STATUS "Version: ${VER_TAG}")
 include_directories(
     ${PROJECT_BINARY_DIR} # config.h
     ${SDL2_INCLUDE_DIRS}
+    ${MPEG2_INCLUDE_DIRS}
 )
 
 if( "${CMAKE_TARGET_ARCHITECTURES}" MATCHES "i386" )
@@ -98,11 +97,6 @@ add_subdirectory(timer)
 add_subdirectory(video)
 add_subdirectory(vldp)
 
-add_dependencies( vldp libmpeg2 )
-add_dependencies( ldp-out vldp )
-add_dependencies( game vldp )
-add_dependencies( sound vldp )
-
 add_executable( hypseus hypseus.cpp globals.h )
 target_link_libraries( hypseus plog io timer sound video cpu game ${SDL2_LIBRARIES} ${SDL2_TTF_LIBRARIES})
 
diff --git a/src/cmake/modules/BuildLibMPEG2.cmake b/src/cmake/modules/BuildLibMPEG2.cmake
index f95d29f..80c204c 100644
--- a/src/cmake/modules/BuildLibMPEG2.cmake
+++ b/src/cmake/modules/BuildLibMPEG2.cmake
@@ -1,6 +1,6 @@
 macro( build_libmpeg2 )
 
-if( CMAKE_CROSS_COMPILING )
+if( CMAKE_CROSSCOMPILING )
     string( REGEX MATCH "([-A-Za-z0-9\\._]+)-(gcc|cc)$" RESULT ${CMAKE_C_COMPILER} )
     string( REGEX REPLACE "-(gcc|cc)$" "" RESULT ${RESULT} )
     set( CONFIGURE_ARGS "--host=${RESULT}" )
@@ -8,7 +8,8 @@ endif()
 
 externalproject_add( libmpeg2
 	PREFIX ${CMAKE_CURRENT_BINARY_DIR}/3rdparty
-	URL https://github.com/btolab/libmpeg2/archive/master.zip
+	GIT_REPOSITORY https://github.com/btolab/libmpeg2.git
+	GIT_TAG master
 	CONFIGURE_COMMAND autoreconf -f -i && <SOURCE_DIR>/configure ${CONFIGURE_ARGS} --prefix=${CMAKE_CURRENT_BINARY_DIR}/3rdparty --disable-shared --enable-static --disable-sdl
 	BUILD_IN_SOURCE 1
 	BUILD_COMMAND make V=0
diff --git a/src/io/input.cpp b/src/io/input.cpp
index b682f35..711b025 100644
--- a/src/io/input.cpp
+++ b/src/io/input.cpp
@@ -51,10 +51,11 @@ using namespace std;
 #define strcasecmp stricmp
 #endif
 
+static int batocera_hotkey = 0;
+
 const int JOY_AXIS_MID = (int)(32768 * (0.75)); // how far they have to move the
                                                 // joystick before it 'grabs'
 
-SDL_Joystick *G_joystick = NULL;  // pointer to joystick object
 bool g_use_joystick      = true;  // use a joystick by default
 bool g_alt_pressed       = false; // whether the ALT key is presssed (for ALT-Enter
                                   // combo)
@@ -107,24 +108,46 @@ int g_key_defs[SWITCH_COUNT][2] = {
     {SDLK_ESCAPE, SDLK_q},    // Quit DAPHNE
     {SDLK_p, 0},                      // pause game
     {SDLK_BACKQUOTE, 0},                  // toggle console (TODO)
-    {SDLK_t, 0},                      // Tilt/Slam switch
+    {SDLK_t, 0}                       // Tilt/Slam switch
 };
 
 ////////////
 
-// added by Russ
-// global button mapping array. just hardcoded room for 10 buttons max
-int joystick_buttons_map[10] = {
-    SWITCH_BUTTON1, // button 1
-    SWITCH_BUTTON2, // button 2
-    SWITCH_BUTTON3, // button 3
-    SWITCH_BUTTON1, // button 4
-    SWITCH_COIN1,   // button 5
-    SWITCH_START1,  // button 6
-    SWITCH_BUTTON1, // button 7
-    SWITCH_BUTTON1, // button 8
-    SWITCH_BUTTON1, // button 9
-    SWITCH_BUTTON1, // button 10
+// default joystick buttons assignments, in case .ini file is missing
+// Two values defined: 1st=joystick index (0=1st joystick), 2nd=button index (0=not defined)
+// NOTE : These are in a specific order, corresponding to the enum in hypseus.h
+int g_joy_btn_defs[SWITCH_COUNT][2] = {
+    {0, 0}, // up
+    {0, 0}, // left
+    {0, 0}, // down
+    {0, 0}, // right
+    {0, 6}, // 1 player start
+    {0, 0}, // 2 player start
+    {0, 1}, // action button 1
+    {0, 2}, // action button 2
+    {0, 3}, // action button 3
+    {0, 5}, // coin chute left
+    {0, 0}, // coin chute right
+    {0, 0}, // skill easy
+    {0, 0}, // skill medium
+    {0, 0}, // skill hard
+    {0, 0}, // service coin
+    {0, 0}, // test mode
+    {0, 0}, // reset cpu
+    {0, 0}, // take screenshot
+    {0, 0}, // Quit DAPHNE
+    {0, 0}, // pause game
+    {0, 0}, // toggle console (TODO)
+    {0, 0}  // Tilt/Slam switch
+};
+// default joystick axis assignments, in case .ini file is missing for rg351p
+// Three values defined: 1st=joystick index (0=1st joystick), 2nd=axis index (0=not defined), 3rd=direction (-1/1, 0=not defined)
+// Only first four switch defined (SWITCH_UP to SWITCH_RIGHT)
+int g_joy_axs_defs[SWITCH_START1][3] = {
+    {0, 2, 1}, // up
+    {0, 1, 1}, // left
+    {0, 2, -1},  // down
+    {0, 1, -1}   // right
 };
 
 // Mouse button to key mappings
@@ -143,8 +166,8 @@ void CFG_Keys()
 {
     struct mpo_io *io;
     string cur_line = "";
-    string key_name = "", sval1 = "", sval2 = "", sval3 = "", eq_sign = "";
-    int val1 = 0, val2 = 0, val3 = 0;
+    string key_name = "", sval1 = "", sval2 = "", sval3 = "", sval4 = "", eq_sign = "";
+    int val1 = 0, val2 = 0, val3 = 0, val4 = 0;
     //	bool done = false;
 
     // find where the hypinput ini file is (if the file doesn't exist, this
@@ -188,6 +211,10 @@ void CFG_Keys()
                                     val1         = atoi(sval1.c_str());
                                     val2         = atoi(sval2.c_str());
                                     val3         = atoi(sval3.c_str());
+                                    val4         = 0;
+                                    if (find_word(cur_line.c_str(), sval4, cur_line)) {
+                                       val4         = atoi(sval4.c_str());
+                                    }
                                     corrupt_file = false; // looks like we're
                                                           // good
 
@@ -200,11 +227,22 @@ void CFG_Keys()
                                             g_key_defs[i][0] = val1;
                                             g_key_defs[i][1] = val2;
 
-                                            // if zero then no mapping
-                                            // necessary, just use default, if
-                                            // any
-                                            if (val3 > 0)
-                                                joystick_buttons_map[val3 - 1] = i;
+                                            // joystick buttons:
+                                            // if zero, use default
+                                            // if not: hundreds=joystick index, units=button index
+                                            if (val3 > 0) {
+                                                g_joy_btn_defs[i][0] = (val3 / 100);
+                                                g_joy_btn_defs[i][1] = (val3 % 100);
+                                            }
+                                            // joystick axis:
+                                            // if zero, use default
+                                            // if not: hundreds=joystick index, units=axis index, sign=direction
+                                            if (val4 != 0) {
+                                                g_joy_axs_defs[i][0] = abs(val4 / 100);
+                                                g_joy_axs_defs[i][1] = abs(val4 % 100);
+                                                g_joy_axs_defs[i][2] = (val4 == 0)?0:((val4 < 0)?-1:1);
+                                            }
+
                                             found_match                        = true;
                                             break;
                                         }
@@ -263,20 +301,17 @@ int SDL_input_init()
     if (SDL_InitSubSystem(SDL_INIT_JOYSTICK) >= 0) {
         // if joystick usage is enabled
         if (g_use_joystick) {
-            // if there is at least 1 joystick and we are authorized to use the
-            // joystick for input
-            if (SDL_NumJoysticks() > 0) {
-                G_joystick = SDL_JoystickOpen(0); // FIXME: right now we
-                                                  // automatically choose the
-                                                  // first joystick
-                if (G_joystick != NULL) {
-                    LOGD << "Joystick #0 was successfully opened";
+            // open joysticks
+            for (int i=0; i < SDL_NumJoysticks(); i++) {
+                SDL_Joystick* joystick = SDL_JoystickOpen(i);
+                if (joystick != NULL) {
+                    LOGD << "Joystick #" << i << " was successfully opened";
                 } else {
-                    LOGW << "Error opening joystick!";
+                    LOGW << "Error opening joystick #" << i << "!";
                 }
-            } else {
-                LOGI << "No joysticks detected";
             }
+            if (SDL_NumJoysticks() == 0)
+                LOGI << "No joysticks detected";
         }
         // notify user that their attempt to disable the joystick is successful
         else {
@@ -459,11 +494,11 @@ void process_event(SDL_Event *event)
     case SDL_JOYBUTTONDOWN:
         reset_idle(); // added by JFA for -idleexit
 
-        // added by Russ
-        // loop through buttons and look for a press
-        for (i = 0; i < (sizeof(joystick_buttons_map) / sizeof(int)); i++) {
-            if (event->jbutton.button == i) {
-                input_enable((Uint8)joystick_buttons_map[i]);
+        // loop through map and find corresponding action
+        for (i = 0; i < SWITCH_COUNT; i++) {
+            if (event->jbutton.which == g_joy_btn_defs[i][0] && event->jbutton.button == g_joy_btn_defs[i][1]-1) {
+                if (i == SWITCH_QUIT || i == SWITCH_COIN1) batocera_hotkey = 1;
+                input_enable(i);
                 break;
             }
         }
@@ -471,11 +506,12 @@ void process_event(SDL_Event *event)
         break;
     case SDL_JOYBUTTONUP:
         reset_idle(); // added by JFA for -idleexit
+        batocera_hotkey = 0;
 
-        // added by Russ
-        for (i = 0; i < (sizeof(joystick_buttons_map) / sizeof(int)); i++) {
-            if (event->jbutton.button == i) {
-                input_disable((Uint8)joystick_buttons_map[i]);
+        // loop through map and find corresponding action
+        for (i = 0; i < SWITCH_COUNT; i++) {
+            if (event->jbutton.which == g_joy_btn_defs[i][0] && event->jbutton.button == g_joy_btn_defs[i][1]-1) {
+                input_disable(i);
                 break;
             }
         }
@@ -562,50 +598,37 @@ void process_keyup(SDL_Keycode key)
 // processes movements of the joystick
 void process_joystick_motion(SDL_Event *event)
 {
-
-    static int x_axis_in_use = 0; // true if joystick is left or right
-    static int y_axis_in_use = 0; // true if joystick is up or down
-
-    // if they are moving along the verticle axis
-    if (event->jaxis.axis == 1) {
-        // if they're moving up
-        if (event->jaxis.value < -JOY_AXIS_MID) {
-            input_enable(SWITCH_UP);
-            y_axis_in_use = 1;
-        }
-        // if they're moving down
-        else if (event->jaxis.value > JOY_AXIS_MID) {
-            input_enable(SWITCH_DOWN);
-            y_axis_in_use = 1;
+    static int x_axis_in_use = 0;
+    static int y_axis_in_use = 0;
+
+    // loop through map and find corresponding action
+    int key = -1;
+    for (int i = 0; i < SWITCH_START1; i++) {
+        if (event->jaxis.which == g_joy_axs_defs[i][0] && event->jaxis.axis == g_joy_axs_defs[i][1]-1 && ((event->jaxis.value < 0)?-1:1) == g_joy_axs_defs[i][2]) {
+            key = i;
+            break;
         }
+    }
+    if (key == -1) return;
 
-        // if they just barely stopped moving up or down
-        else if (y_axis_in_use == 1) {
+    if (abs(event->jaxis.value) > JOY_AXIS_MID) {
+        input_enable(key);
+        if (key == SWITCH_UP || key == SWITCH_DOWN)
+            y_axis_in_use = 1;
+        else 
+            x_axis_in_use = 1;
+    }
+    else {
+        if ((key == SWITCH_UP || key == SWITCH_DOWN) && y_axis_in_use) {
             input_disable(SWITCH_UP);
             input_disable(SWITCH_DOWN);
             y_axis_in_use = 0;
-        }
-    } // end verticle axis
-
-    // horizontal axis
-    else {
-        // if they're moving right
-        if (event->jaxis.value > JOY_AXIS_MID) {
-            input_enable(SWITCH_RIGHT);
-            x_axis_in_use = 1;
-        }
-        // if they're moving left
-        else if (event->jaxis.value < -JOY_AXIS_MID) {
-            input_enable(SWITCH_LEFT);
-            x_axis_in_use = 1;
-        }
-        // if they just barely stopped moving right or left
-        else if (x_axis_in_use == 1) {
-            input_disable(SWITCH_RIGHT);
+        } else if ((key == SWITCH_LEFT || key == SWITCH_RIGHT) && x_axis_in_use) {
             input_disable(SWITCH_LEFT);
+            input_disable(SWITCH_RIGHT);
             x_axis_in_use = 0;
         }
-    } // end horizontal axis
+    }
 }
 
 // processes movement of the joystick hat
@@ -668,8 +691,11 @@ void input_enable(Uint8 move)
     case SWITCH_PAUSE:
         g_game->toggle_game_pause();
         break;
-    case SWITCH_QUIT:
-        set_quitflag();
+    case SWITCH_START1:
+        if(batocera_hotkey == 1)
+            set_quitflag();
+        else
+            g_game->input_enable(move);
         break;
     case SWITCH_COIN1:
     case SWITCH_COIN2:
diff --git a/src/vldp/vldp.h b/src/vldp/vldp.h
index 021c30d..f589ff1 100644
--- a/src/vldp/vldp.h
+++ b/src/vldp/vldp.h
@@ -33,6 +33,7 @@ extern "C" {
 // by RDG2010
 // Ubuntu Linux complains with plain <SDL.h>
 #include <SDL.h> // only used for threading
+#include <mpeg2.h>
 
 struct yuv_buf {
     uint8_t *Y;     // Y channel
diff --git a/src/vldp/vldp_internal.cpp b/src/vldp/vldp_internal.cpp
index a08ebd0..3057534 100644
--- a/src/vldp/vldp_internal.cpp
+++ b/src/vldp/vldp_internal.cpp
@@ -37,8 +37,6 @@
 
 #include <inttypes.h>
 
-#include <mpeg2.h>
-
 // NOTICE : these variables should only be used by the private thread
 // !!!!!!!!!!!!
 
